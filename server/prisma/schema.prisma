generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRODUCTION_DATABASE_URL")
}

model User {
  id            String      @id @default(cuid())
  githubId      String?     @unique
  googleId      String?     @unique
  email         String      @unique
  name          String
  surname       String
  handle        String      @unique
  passwordHash  String     // Made optional to support OAuth users without passwords
  profilePicUrl String?
  createdAt     DateTime    @default(now())
  posts         Post[]
  favourites    Favourite[]
  reposts       Repost[]
  followers     Follow[]    @relation("UserFollowers")
  following     Follow[]    @relation("UserFollowing")
}

model Post {
  id         String      @id @default(cuid())
  authorId   String
  text       String
  imageUrl   String?
  replyToId  String?
  createdAt  DateTime    @default(now())
  author     User        @relation(fields: [authorId], references: [id], onDelete: Cascade)
  replyTo    Post?       @relation("PostReplies", fields: [replyToId], references: [id], onDelete: Cascade)
  replies    Post[]      @relation("PostReplies")
  favourites Favourite[]
  reposts    Repost[]
}

model Repost {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  comment   String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

model Favourite {
  userId String
  postId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([userId, postId])
}

model Follow {
  id          String   @id @default(uuid())
  follower    User     @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  followerId  String
  following   User     @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)
  followingId String
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}
